import telebot
import os
import requests
from telebot import types

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot("TG_TOKEN")

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_sticker_pack_config = {}

@bot.message_handler(commands=['configure_sticker_pack'])
def configure_sticker_pack(message):
    user_id = message.from_user.id

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –≤–∞—à–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —á–∞—Å—Ç—å—é URL:")
    bot.register_next_step_handler(message, get_sticker_pack_name)

def get_sticker_pack_name(message):
    user_id = message.from_user.id
    sticker_pack_name = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
    user_sticker_pack_config[user_id] = {'name': sticker_pack_name}

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞, –æ–Ω–æ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –≤ –ø—Ä–µ–¥–≤—Ä–æ—Å–º–æ—Ç—Ä–µ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞:")
    bot.register_next_step_handler(message, get_sticker_pack_title)

def get_sticker_pack_title(message):
    user_id = message.from_user.id
    sticker_pack_title = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
    user_sticker_pack_config[user_id]['title'] = sticker_pack_title

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —ç–º–æ–¥–∑–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∞—à–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞:")
    bot.register_next_step_handler(message, get_sticker_pack_emojis)

def get_sticker_pack_emojis(message):
    user_id = message.from_user.id
    sticker_pack_emojis = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç–º–æ–¥–∑–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
    user_sticker_pack_config[user_id]['emojis'] = sticker_pack_emojis

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–∏–ø —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ (—Å—Ç–∞—Ç–∏—á–Ω—ã–π –∏–ª–∏ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup.add(types.KeyboardButton('–°—Ç–∞—Ç–∏—á–Ω—ã–π'), types.KeyboardButton('–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π'))

    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞:", reply_markup=markup)
    bot.register_next_step_handler(message, get_sticker_pack_type)

def get_sticker_pack_type(message):
    user_id = message.from_user.id
    sticker_pack_type = message.text.lower()

    if sticker_pack_type in ('—Å—Ç–∞—Ç–∏—á–Ω—ã–π', '–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π'):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
        user_sticker_pack_config[user_id]['is_animated'] = (sticker_pack_type == '–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π')

        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞
        config_info = user_sticker_pack_config[user_id]
        response = f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞:\n–ò–º—è: {config_info['name']}\n–ó–∞–≥–æ–ª–æ–≤–æ–∫: {config_info['title']}\n–≠–º–æ–¥–∑–∏: {config_info['emojis']}\n–¢–∏–ø: {'–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π' if config_info['is_animated'] else '–°—Ç–∞—Ç–∏—á–Ω—ã–π'}"
        bot.send_message(user_id, response)

        # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é create_sticker_pack, –ø–µ—Ä–µ–¥–∞–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è user_sticker_pack_config

    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø '–°—Ç–∞—Ç–∏—á–Ω—ã–π' –∏–ª–∏ '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π'.")


@bot.message_handler(commands=['reset', 'start', 'help'])
def reset_handler(message):
    # Get the user's ID
    user_id = message.from_user.id

    # Create a directory for the user's stickers if it doesn't exist
    user_sticker_dir = f'assets/stickers_{user_id}'

    # Delete the contents of the user's sticker directory
    for file_name in os.listdir(user_sticker_dir):
        file_path = os.path.join(user_sticker_dir, file_name)
        if os.path.isfile(file_path):
            os.remove(file_path)

    # Clear the user's sticker pack configuration
    user_sticker_pack_config[user_id] = {}

    # Send a welcome message with usage instructions
    welcome_message =  "Welcom to CustomStickerPack bot.\n\n" \
                       "This bot can help you create your own perfect StickerPack\n" \
                       "with your favorite stickers, and you will not need\n" \
                       "save tonns unused StickerPacks. \n\n" \
                       "Instruction: \n" \
                       "1. Send /start command to start from the very beginning\n" \
                       "2. Now send to bots your favorite stickers. \n" \
                       "Please be aware - only static stickers are supported\n" \
                       "3. When you decide on the amount of stickers you need to configure\n" \
                       "you StickerPack setting\n" \
                       "4. Send /configure_sticker_pack command\n" \
                       "Name: set name, will part of URL: https://t.me/addstickers/YOUR_NAME+_by_c_s_p_bot \n" \
                       "Title: The name of StickerPack, will show in the StickerPack preview\n" \
                       "Emoji: ü§î\n" \
                       "Type: Now supported only static\n" \
                       "5. When finished send command /create_sticker_pack\n\n" \
                       "Enjoy!\n"
    
    bot.send_message(message.chat.id, welcome_message)

@bot.message_handler(content_types=['sticker'])
def sticker_handler(message):

    # Get the user's ID
    user_id = message.from_user.id

    # Create a directory for the user's stickers if it doesn't exist
    user_sticker_dir = f'assets/stickers_{user_id}'
    os.makedirs(user_sticker_dir, exist_ok=True)

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∏–∫–µ—Ä–µ
    sticker = message.sticker

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∏–∫–µ—Ä–µ
    message_text = f'–°—Ç–∏–∫–µ—Ä: {sticker.file_id}\n\n' \
                   f'–ù–∞–∑–≤–∞–Ω–∏–µ: {sticker.set_name}\n\n' \
                   f'type: {sticker.type}'

    # –ü–æ–ª—É—á–∞–µ–º URL —Ñ–∞–π–ª–∞ —Å—Ç–∏–∫–µ—Ä–∞
    sticker_file_id = sticker.file_id
    file_info = bot.get_file(sticker_file_id)
    file_url = f'https://api.telegram.org/file/bot{bot.token}/{file_info.file_path}'

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    response = requests.get(file_url)
    if response.status_code == 200:
        with open(f'{user_sticker_dir}/{sticker_file_id}.png', 'wb') as file:
            file.write(response.content)
    else:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Å—Ç–∏–∫–µ—Ä.')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(message.chat.id, message_text)

@bot.message_handler(commands=['create_sticker_pack'])
def create_sticker_pack(message):
    
    # Get the user's ID
    user_id = message.from_user.id
    # Create a directory for the user's stickers if it doesn't exist
    user_sticker_dir = f'assets/stickers_{user_id}'

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ "stickers"
    sticker_files = [
        os.path.join(user_sticker_dir, file_name)
        for file_name in os.listdir(user_sticker_dir)
        if os.path.isfile(os.path.join(user_sticker_dir, file_name))
    ]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã 1 —Ñ–∞–π–ª (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞)
    if len(sticker_files) < 1:
        bot.send_message(message.chat.id, '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ –Ω—É–∂–Ω–æ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 1 —Å—Ç–∏–∫–µ—Ä.')
        return

    user_id = message.from_user.id

    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞
    # –ß–∏—Ç–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    config_info = user_sticker_pack_config[user_id]
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è
    sticker_set_name = f"{config_info['name']}_{user_id}" + '_by_c_s_p_bot'
    title_name = f"{config_info['title']}"
    custom_emoji = f"{config_info['emojis']}"

    try:
        message = bot.send_message(chat_id=user_id, text='Processing...')

        sticker_set = None
        try:
            sticker_set = bot.get_sticker_set(sticker_set_name)
        except:
            pass

        if sticker_set:
            for sticker in sticker_set.stickers:
                bot.delete_sticker_from_set(sticker.file_id)
        bot.edit_message_text(chat_id=user_id, text='Creating sticker pack...',
                                            message_id=message.message_id)

        if sticker_set is None:
            bot.create_new_sticker_set(user_id, name=sticker_set_name, title=title_name,
                                                        png_sticker=open(sticker_files[0], 'rb'), emojis=[custom_emoji])

        idx = 1
        for file in sticker_files:
            text = 'Adding stickers to sticker set ' + str(idx) + '/' + str(len(sticker_files)) + '...'
            bot.edit_message_text(chat_id=user_id, text=text, message_id=message.message_id)
            bot.add_sticker_to_set(user_id, name=sticker_set_name, png_sticker=open(file, 'rb'),
                                                emojis=[custom_emoji])
            idx += 1
            
        sticker_set = bot.get_sticker_set(sticker_set_name)
        bot.edit_message_text(chat_id=user_id, text='Done!', message_id=message.message_id)
        # bot.send_sticker(chat_id=user_id, sticker=sticker_set.stickers[0].file_id)
        bot.edit_message_text(chat_id=user_id, text='–ö–ª–∏–∫–Ω–∏ –ø–æ —Å—Ç–∏–∫–µ—Ä—É ^ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–±–µ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫!', message_id=message.message_id)
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫
        sticker_pack_link = f'https://t.me/addstickers/{sticker_set_name}'

        # Define the file path for storing sticker pack links
        links_file_path = 'sticker_pack_links.txt'

        # Append the sticker pack link to the file
        with open(links_file_path, 'a') as links_file:
            links_file.write(sticker_pack_link + '\n')

        bot.send_message(message.chat.id, f'–ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è —Å—Å—ã–ª–∫–æ–π:\n{sticker_pack_link}')

    except Exception as e:
        print(e)
        bot.send_message(chat_id=user_id, text='Something went wrong. Please try again.')
        bot.send_message(chat_id=user_id, text=str(e))

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling()
